-- My Custom Enhanced Script (Mobile Version)

local MyLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/Documantation12/Universal-Vehicle-Script/main/Library.lua"))()
local MyUI = nil

repeat task.wait() until game:IsLoaded()
repeat task.wait() until game:GetService("Players").LocalPlayer

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- Ensure UI is created properly
pcall(function()
    MyUI = MyLibrary.new("Custom Vehicle Script - Made by Genesis_ui", 5013109572)
end)

if not MyUI then
    warn("UI failed to load. Retrying...")
    repeat task.wait(1)
        pcall(function()
            MyUI = MyLibrary.new("Custom Vehicle Script - Made by Genesis_ui", 5013109572)
        end)
    until MyUI
end

-- UI Theme
local Theme = {
    Background = Color3.fromRGB(30, 30, 50), 
    Glow = Color3.fromRGB(90, 90, 255), 
    Accent = Color3.fromRGB(70, 70, 140), 
    LightContrast = Color3.fromRGB(50, 50, 80), 
    DarkContrast = Color3.fromRGB(25, 25, 40),  
    TextColor = Color3.fromRGB(255, 255, 255)
}

for index, value in pairs(Theme) do
    pcall(function() MyUI:setTheme(index, value) end)
end

-- Vehicle Control
local function GetVehicle(Part)
    if not Part then return nil end
    return Part:FindFirstAncestor(LocalPlayer.Name .. "'s Car")
        or Part:FindFirstAncestorWhichIsA("Model")
end

local function MoveVehicle(CoordinateFrame)
    local Character = LocalPlayer.Character
    if not Character then return end
    
    local Vehicle = GetVehicle(Character:FindFirstChildWhichIsA("Humanoid") and Character:FindFirstChildWhichIsA("Humanoid").SeatPart)
    if not Vehicle then return end
    
    Vehicle:SetPrimaryPartCFrame(CoordinateFrame)
end

local vehiclePage = MyUI:addPage("Vehicle", 8356815386)
local controlSection = vehiclePage:addSection("Flight, Speed & Brakes")

local flightEnabled, speedBoost, brakingEnabled = false, false, true
local flightSpeed, speedMultiplier, brakeStrength = 1, 0.025, 0.15

controlSection:addToggle("Enable Flight", false, function(v) flightEnabled = v end)
controlSection:addSlider("Flight Speed", 100, 0, 800, function(v) flightSpeed = v / 100 end)
controlSection:addToggle("Enable Speed Boost", false, function(v) speedBoost = v end)
controlSection:addSlider("Speed Multiplier", 25, 0, 100, function(v) speedMultiplier = v / 1000 end)
controlSection:addToggle("Enable Brakes", true, function(v) brakingEnabled = v end)
controlSection:addSlider("Brake Strength", 15, 0, 50, function(v) brakeStrength = v / 100 end)

-- Mobile Touch Controls
local touchControls = {
    forward = false,
    backward = false,
    left = false,
    right = false,
    up = false,
    down = false
}

local buttonFrame = Instance.new("ScreenGui", game.CoreGui)
buttonFrame.Name = "MobileControls"

local function createButton(name, position, onTouch)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 80, 0, 80)
    button.Position = position
    button.Text = name
    button.BackgroundColor3 = Color3.fromRGB(70, 70, 140)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Parent = buttonFrame

    button.TouchTap:Connect(onTouch)
    return button
end

createButton("Up", UDim2.new(0.9, 0, 0.4, 0), function()
    touchControls.up = not touchControls.up
end)

createButton("Down", UDim2.new(0.9, 0, 0.55, 0), function()
    touchControls.down = not touchControls.down
end)

createButton("Forward", UDim2.new(0.05, 0, 0.75, 0), function()
    touchControls.forward = not touchControls.forward
end)

createButton("Backward", UDim2.new(0.15, 0, 0.75, 0), function()
    touchControls.backward = not touchControls.backward
end)

createButton("Left", UDim2.new(0.05, 0, 0.85, 0), function()
    touchControls.left = not touchControls.left
end)

createButton("Right", UDim2.new(0.15, 0, 0.85, 0), function()
    touchControls.right = not touchControls.right
end)

RunService.RenderStepped:Connect(function(deltaTime)
    local Character = LocalPlayer.Character
    if not Character then return end

    local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")
    if not Humanoid then return end

    local SeatPart = Humanoid.SeatPart
    if not SeatPart or not SeatPart:IsA("VehicleSeat") then return end

    local Vehicle = GetVehicle(SeatPart)
    if not Vehicle then return end

    if not Vehicle.PrimaryPart then
        local basePart = Vehicle:FindFirstChildWhichIsA("BasePart")
        if basePart then
            Vehicle.PrimaryPart = basePart
        else
            return
        end
    end

    if flightEnabled then
        local PrimaryPartCFrame = Vehicle:GetPrimaryPartCFrame()
        local moveVector = Vector3.new(0, 0, 0)

        if touchControls.forward then
            moveVector = moveVector + workspace.CurrentCamera.CFrame.LookVector * flightSpeed
        end
        if touchControls.backward then
            moveVector = moveVector - workspace.CurrentCamera.CFrame.LookVector * flightSpeed
        end
        if touchControls.left then
            moveVector = moveVector - workspace.CurrentCamera.CFrame.RightVector * flightSpeed
        end
        if touchControls.right then
            moveVector = moveVector + workspace.CurrentCamera.CFrame.RightVector * flightSpeed
        end
        if touchControls.up then
            moveVector = moveVector + Vector3.new(0, flightSpeed, 0)
        end
        if touchControls.down then
            moveVector = moveVector - Vector3.new(0, flightSpeed, 0)
        end

        for _, part in pairs(Vehicle:GetDescendants()) do
            if part:IsA("BasePart") then
                part.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                part.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                part.Velocity = Vector3.new(0, 0, 0)
            end
        end

        MoveVehicle(PrimaryPartCFrame + moveVector * deltaTime * 60)
    end

    if speedBoost and touchControls.forward then
        SeatPart.AssemblyLinearVelocity *= Vector3.new(1 + speedMultiplier, 1, 1 + speedMultiplier)
    end

    if brakingEnabled and touchControls.backward then
        SeatPart.AssemblyLinearVelocity *= Vector3.new(1 - brakeStrength, 1, 1 - brakeStrength)
    end
end)

print("Genesis UI Script Loaded Successfully for Mobile!")
